name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Docker
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # Step 3: Build Docker image
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/result:${{ github.sha }} ./result
        docker build -t ${{ secrets.DOCKER_USERNAME }}/vote:${{ github.sha }} ./vote
        docker build -t ${{ secrets.DOCKER_USERNAME }}/worker:${{ github.sha }} ./worker

    # Step 4: Push Docker image to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/result:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/vote:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/worker:${{ github.sha }}

  deploy:
    runs-on: self-hosted  # Run on your self-hosted runner
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'us-east-1'

    - name: Set up SSH private key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" > ~/.ssh/my-key.pem
        chmod 600 ~/.ssh/my-key.pem  # Set appropriate permissions for the private key
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
        
    - name: Run SSH commands
      run: |
       ssh -i ${{ secrets.EC2_KEY }} -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}"
       ssh -i ${{ secrets.EC2_KEY }} -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "sudo docker pull ${{ secrets.DOCKER_USERNAME }}/result:${{ github.sha }}"
       ssh -i ${{ secrets.EC2_KEY }} -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "sudo docker pull ${{ secrets.DOCKER_USERNAME }}/vote:${{ github.sha }}"
       ssh -i ${{ secrets.EC2_KEY }} -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "sudo docker pull ${{ secrets.DOCKER_USERNAME }}/worker:${{ github.sha }}"
       ssh -i ${{ secrets.EC2_KEY }} -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "sudo docker-compose up -d"
      
    

